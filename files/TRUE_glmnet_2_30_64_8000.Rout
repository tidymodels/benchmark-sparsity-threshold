
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> sparse_data <- TRUE
> model <- "glmnet"
> seed <- 2
> n_numeric <- 30
> n_counts <- 64
> n_rows <- 8000
> file_name <- glue::glue("{sparse_data}_{model}_{seed}_{n_numeric}_{n_counts}_{n_rows}.RData")
> 
> ## Packages --------------------------------------------------------------------
> 
> suppressPackageStartupMessages({
+ library(tidymodels)
+ })
> 
> ## Simulate data ---------------------------------------------------------------
> 
> create_dummy <- function(n) {
+   n_non_zero <- rpois(1, n / 1000) + 1
+   positions <- sort(sample(n, n_non_zero))
+   values <- rep(1, n_non_zero)
+ 
+   sparsevctrs::sparse_integer(values, positions, length = n)
+ }
> 
> create_data <- function(n_rows, n_dense, n_sparse) {
+   outcome <- rnorm(n_rows)
+ 
+   dense_columns <- map(seq_len(n_dense), ~rnorm(n = n_rows))
+   names(dense_columns) <- paste0("d", seq_len(n_dense))
+ 
+   sparse_columns <- map(seq_len(n_sparse), ~create_dummy(n = n_rows))
+   names(sparse_columns) <- paste0("s", seq_len(n_sparse))
+ 
+ 
+   bind_cols(outcome = outcome, dense_columns, sparse_columns)
+ }
> 
> materialize_data <- function(data) {
+   for (i in seq_along(data)) {
+     data[[i]] <- data[[i]][]
+   }
+   data
+ }
> 
> set.seed(seed)
> 
> data <- create_data(n_rows, n_numeric, n_counts)
> 
> if (!sparse_data) {
+   data <- materialize_data(data)
+ }
> 
> ## Specify model ---------------------------------------------------------------
> 
> rec_spec <- recipe(outcome ~ ., data = data)
> if (model == "xgboost") {
+   mod_spec <- boost_tree(mode = "regression", engine = "xgboost")
+ } else if (model == "glmnet") {
+   mod_spec <- linear_reg(mode = "regression", engine = "glmnet", penalty = 0)
+ } else if (model == "ranger") {
+   mod_spec <- rand_forest(mode = "regression", engine = "ranger")
+ } else if (model == "LiblineaR") {
+   mod_spec <- svm_linear(mode = "regression", engine = "LiblineaR")
+ } else if (model == "lightgbm") {
+   library(bonsai)
+   library(lightgbm)
+   mod_spec <- boost_tree(mode = "regression", engine = "lightgbm")
+ }
> wf_spec <- workflow(rec_spec, mod_spec)
> 
> ## model fit -------------------------------------------------------------------
> 
> mem_alloc <- bench::bench_memory(
+   time <- system.time(
+     wf_fit <- fit(wf_spec, data)
+   )
+ )
> 
> ## Model performance -----------------------------------------------------------
> 
> preds <- predict(wf_fit, data)
> rmse_value <- rmse_vec(preds$.pred, data$outcome)
> 
> ## Session info ----------------------------------------------------------------
> 
> sessioninfo::session_info()
─ Session info ───────────────────────────────────────────────────────────────
 setting  value
 version  R version 4.5.0 (2025-04-11)
 os       macOS Sequoia 15.5
 system   aarch64, darwin20
 ui       X11
 language (EN)
 collate  en_US.UTF-8
 ctype    en_US.UTF-8
 tz       America/Los_Angeles
 date     2025-07-13
 pandoc   3.6.1 @ /usr/local/bin/pandoc
 quarto   1.6.42 @ /Applications/quarto/bin/quarto

─ Packages ───────────────────────────────────────────────────────────────────
 package      * version    date (UTC) lib source
 backports      1.5.0      2024-05-23 [1] CRAN (R 4.5.0)
 bench          1.1.4      2025-01-16 [1] CRAN (R 4.5.0)
 broom        * 1.0.8      2025-03-28 [1] CRAN (R 4.5.0)
 class          7.3-23     2025-01-01 [2] CRAN (R 4.5.0)
 cli            3.6.5      2025-04-23 [1] CRAN (R 4.5.0)
 codetools      0.2-20     2024-03-31 [2] CRAN (R 4.5.0)
 data.table     1.17.6     2025-06-17 [1] CRAN (R 4.5.0)
 dials        * 1.4.0.9000 2025-06-30 [1] Github (tidymodels/dials@5a36852)
 DiceDesign     1.10       2023-12-07 [1] CRAN (R 4.5.0)
 digest         0.6.37     2024-08-19 [1] CRAN (R 4.5.0)
 dplyr        * 1.1.4      2023-11-17 [1] CRAN (R 4.5.0)
 farver         2.1.2      2024-05-13 [1] CRAN (R 4.5.0)
 foreach        1.5.2      2022-02-02 [1] CRAN (R 4.5.0)
 furrr          0.3.1      2022-08-15 [1] CRAN (R 4.5.0)
 future         1.58.0     2025-06-05 [1] CRAN (R 4.5.0)
 future.apply   1.20.0     2025-06-06 [1] CRAN (R 4.5.0)
 generics       0.1.4      2025-05-09 [1] CRAN (R 4.5.0)
 ggplot2      * 3.5.2      2025-04-09 [1] CRAN (R 4.5.0)
 glmnet         4.1-8      2023-08-22 [1] CRAN (R 4.5.0)
 globals        0.18.0     2025-05-08 [1] CRAN (R 4.5.0)
 glue           1.8.0      2024-09-30 [1] CRAN (R 4.5.0)
 gower          1.0.2      2024-12-17 [1] CRAN (R 4.5.0)
 GPfit          1.0-9      2025-04-12 [1] CRAN (R 4.5.0)
 gtable         0.3.6      2024-10-25 [1] CRAN (R 4.5.0)
 hardhat        1.4.1.9000 2025-04-30 [1] Github (tidymodels/hardhat@61c54fc)
 infer        * 1.0.8      2025-04-14 [1] CRAN (R 4.5.0)
 ipred          0.9-15     2024-07-18 [1] CRAN (R 4.5.0)
 iterators      1.0.14     2022-02-05 [1] CRAN (R 4.5.0)
 lattice        0.22-7     2025-04-02 [1] CRAN (R 4.5.0)
 lava           1.8.1      2025-01-12 [1] CRAN (R 4.5.0)
 lhs            1.2.0      2024-06-30 [1] CRAN (R 4.5.0)
 lifecycle      1.0.4      2023-11-07 [1] CRAN (R 4.5.0)
 listenv        0.9.1      2024-01-29 [1] CRAN (R 4.5.0)
 lubridate      1.9.4      2024-12-08 [1] CRAN (R 4.5.0)
 magrittr       2.0.3      2022-03-30 [1] CRAN (R 4.5.0)
 MASS           7.3-65     2025-02-28 [2] CRAN (R 4.5.0)
 Matrix         1.7-3      2025-03-11 [2] CRAN (R 4.5.0)
 modeldata    * 1.4.0      2024-06-19 [1] CRAN (R 4.5.0)
 nnet           7.3-20     2025-01-01 [2] CRAN (R 4.5.0)
 parallelly     1.45.0     2025-06-02 [1] CRAN (R 4.5.0)
 parsnip      * 1.3.2.9000 2025-06-01 [1] Github (tidymodels/parsnip@6d4c684)
 pillar         1.11.0     2025-07-04 [1] CRAN (R 4.5.0)
 pkgconfig      2.0.3      2019-09-22 [1] CRAN (R 4.5.0)
 prodlim        2025.04.28 2025-04-28 [1] CRAN (R 4.5.0)
 profmem        0.6.0      2020-12-13 [1] CRAN (R 4.5.0)
 purrr        * 1.1.0      2025-07-10 [1] CRAN (R 4.5.0)
 R6             2.6.1      2025-02-15 [1] CRAN (R 4.5.0)
 RColorBrewer   1.1-3      2022-04-03 [1] CRAN (R 4.5.0)
 Rcpp           1.1.0      2025-07-02 [1] CRAN (R 4.5.0)
 recipes      * 1.3.1.9000 2025-06-03 [1] local
 rlang          1.1.6      2025-04-11 [1] CRAN (R 4.5.0)
 rpart          4.1.24     2025-01-07 [2] CRAN (R 4.5.0)
 rsample      * 1.3.0.9000 2025-06-30 [1] Github (tidymodels/rsample@d4ef665)
 rstudioapi     0.17.1     2024-10-22 [1] CRAN (R 4.5.0)
 scales       * 1.4.0      2025-04-24 [1] CRAN (R 4.5.0)
 sessioninfo    1.2.3      2025-02-05 [1] CRAN (R 4.5.0)
 shape          1.4.6.1    2024-02-23 [1] CRAN (R 4.5.0)
 sparsevctrs    0.3.4      2025-05-25 [1] CRAN (R 4.5.0)
 survival       3.8-3      2024-12-17 [2] CRAN (R 4.5.0)
 tibble       * 3.3.0      2025-06-08 [1] CRAN (R 4.5.0)
 tidymodels   * 1.3.0      2025-02-21 [1] CRAN (R 4.5.0)
 tidyr        * 1.3.1      2024-01-24 [1] CRAN (R 4.5.0)
 tidyselect     1.2.1      2024-03-11 [1] CRAN (R 4.5.0)
 timechange     0.3.0      2024-01-18 [1] CRAN (R 4.5.0)
 timeDate       4041.110   2024-09-22 [1] CRAN (R 4.5.0)
 tune         * 1.3.0.9001 2025-07-11 [1] local
 vctrs          0.6.5      2023-12-01 [1] CRAN (R 4.5.0)
 withr          3.0.2      2024-10-28 [1] CRAN (R 4.5.0)
 workflows    * 1.2.0.9000 2025-04-30 [1] Github (tidymodels/workflows@835ee35)
 workflowsets * 1.1.1      2025-05-27 [1] CRAN (R 4.5.0)
 yardstick    * 1.3.2.9000 2025-06-04 [1] local

 [1] /Users/emilhvitfeldt/Library/R/arm64/4.5/library
 [2] /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/library
 * ── Packages attached to the search path.

──────────────────────────────────────────────────────────────────────────────
> 
> # Save results -----------------------------------------------------------------
> 
> readr::write_rds(
+   list(
+     sparse_data = sparse_data,
+     model = model,
+     n_numeric = n_numeric,
+     n_counts = n_counts,
+     n_rows = n_rows,
+     seed = seed,
+     time = time[["elapsed"]],
+     rmse = rmse_value,
+     mem_alloc = mem_alloc$mem_alloc
+   ),
+   file = file_name
+ )
> 
> proc.time()
   user  system elapsed 
  1.246   0.123   1.486 
